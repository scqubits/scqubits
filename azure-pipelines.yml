# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
      - main
      - spc-noise
      - jk-devel
      - Danny_vchos
      - devel_peterg
      - peterg_qutip5

jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'
      Python312:
        python.version: '3.12'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'
  - script: |
      python -m pip install --upgrade pip
    displayName: 'Upgrade pip'
  - script: |
      pip install -r requirements.txt
      pip install -r optional-requirements.txt
    displayName: 'Install dependencies'
  - script: |
      pip install pytest pytest-azurepipelines
      pip install pathos
      pip install --no-dependencies  .
    displayName: 'Install scqubits'
  - script: |
      pytest -v --pyargs scqubits
    displayName: 'Pytest: single-core'
  - script: |
      export OMP_NUM_THREADS=1
      export OPENBLAS_NUM_THREADS=1
      export MKL_NUM_THREADS=1
      export VECLIB_MAXIMUM_THREADS=1
      export NUMEXPR_NUM_THREADS=1
      pytest -v --pyargs scqubits --num_cpus=4
    displayName: 'Pytest: multiprocessing'
#
#
- job: Windows
  pool:
    vmImage: 'windows-latest'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'
      Python312:
        python.version: '3.12'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'
  - script: |
      python -m pip install --upgrade pip
    displayName: 'Upgrade pip'
  - script: |
      pip install -r requirements.txt
      pip install -r optional-requirements.txt
    displayName: 'Install dependencies'
  - script: |
      pip install --no-dependencies  .
    displayName: 'Install scqubits'
  - script: |
      pytest -v --pyargs scqubits
    displayName: 'Pytest: single-core'
  - script: |
      set OMP_NUM_THREADS=1
      set OPENBLAS_NUM_THREADS=1
      set MKL_NUM_THREADS=1
      set VECLIB_MAXIMUM_THREADS=1
      set NUMEXPR_NUM_THREADS=1
      pytest -v --pyargs scqubits --num_cpus=4
    displayName: 'Pytest: multiprocessing'
#
#
- job: macOS
  pool:
    vmImage: "macos-latest"
  strategy:
    matrix:
      Python37:
        python.version: '3.7'
      Python38:
        python.version: '3.8'
      Python39:
        python.version: '3.9'
      Python310:
        python.version: '3.10'
      Python311:
        python.version: '3.11'
      Python312:
        python.version: '3.12'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'
  - script: |
      python -m pip install --upgrade pip
    displayName: 'Upgrade pip'
  - script: |
      pip install -r requirements.txt
      pip install -r optional-requirements.txt
    displayName: 'Install dependencies'
  - script: |
      pip install pytest pytest-azurepipelines
      pip install pytest-xdist
      pip install pathos
      pip install --no-dependencies  .
    displayName: 'Install scqubits'
  - script: |
      export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
      pytest -v --pyargs scqubits
    displayName: 'Pytest: single-core'
  - script: |
      export OBJC_DISABLE_INITIALIZE_FORK_SAFETY=YES
      export OMP_NUM_THREADS=1
      export OPENBLAS_NUM_THREADS=1
      export MKL_NUM_THREADS=1
      export VECLIB_MAXIMUM_THREADS=1
      export NUMEXPR_NUM_THREADS=1
      pytest -v --pyargs scqubits --num_cpus=4
    displayName: 'Pytest: multiprocessing'
